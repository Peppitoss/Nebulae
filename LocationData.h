#pragma once
#include<list>
#include<string>
#include"Graphics.h"
#include"ShipModel.h"
#include"InteriorModel.h"
#include"SectorUnitDescription.h"
#include"Behaviours.h"
#include"Text.h"

using std::string;



class LocationData
{

public:


	LocationData();
	LocationData(std::function<void(LocationData*)> initializer, bool initialize = false);
	LocationData(SectorUnitDescription& unitDescription);
	//LocationData( const LocationData& );
	//LocationData( LocationData&& );

	//LocationData& operator=(const LocationData& other);
	//LocationData& operator=(const LocationData&& other);
	void AddVessel(std::vector<std::string>& vessel, int amount, enumAllegiance allegiance, const Coord& locationSize);

	void AddVessel( ShipModel ship, enumAllegiance ); //, const Coord& pos);
	ShipModel GetVesselFromName(string name);
	ShipModel GetVesselFromID(int ID);

	bool IsInterior() { return GetInteriorModel().GetName() != ""; }

	void SetInterior(InteriorModel model );
	InteriorModel GetInteriorModel() const { return this->pInterior; };
	//virtual bool UsePlayerWalker() const { return false; }

	int GetShipAmount();
	bool ShipIdExistsInList( int ID);
	std::vector<ShipModel> ShipList() const;
	void SetNewList( std::vector<ShipModel> newlist ) { this->pShipList = newlist; };

	void SetDescription(MissionText set) { this->pDescription = set; }
	MissionText GetDescription() const { return this->pDescription; }

	bool IncludePlayerInLocation() const { return this->pIncludePlayerInLocation; }
	void SetIncludePlayerInLocation(bool set) { this->pIncludePlayerInLocation = set; }

	void InitializeLocation(); 
	//bool IsMission() const;

	const std::vector<ShipModel>::iterator & ShipListBegin() { return pShipList.begin(); }
	const std::vector<ShipModel>::iterator & ShipListEnd() { return pShipList.end(); }

	Coord GetPlayerStartLocation() const { return Coord(0, 0); }

protected:

	InteriorModel pInterior;
	std::vector<ShipModel> pShipList;
	std::function<void(LocationData*)> pInitializer;
	MissionText pDescription;
	bool pIncludePlayerInLocation;

	static int pInitialAutoGenerationID;
	int pCurrentAutoGeneratedShipID;
};